worker_processes auto;

events {
  #worker_connections 4096; # Aumentar o número máximo de conexões por worker
  #multi_accept on; # Aceitar múltiplas conexões em uma única iteração
  #use epoll; # Usar o método epoll para melhor desempenho em sistemas Linux
}

http {
  access_log off;

  upstream api {
    server api01:8080 max_fails=3 fail_timeout=30s; # Adicionar configurações de falha e timeout
    server api02:8080 max_fails=3 fail_timeout=30s;
    keepalive 500; # Manter conexões persistentes com os servidores API
  }

  server {
    listen 9999 reuseport; # Reutilizar portas para balanceamento de carga eficiente
    #tcp_nodelay on; # Ativar o modo TCP no delay para melhorar a latência

    location / {
      proxy_pass http://api;
      proxy_buffering off; # Desativar o buffering para melhorar a latência
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 10s; # Tempo limite de conexão
      proxy_send_timeout 30s; # Tempo limite de envio
      proxy_read_timeout 30s; # Tempo limite de leitura
      proxy_next_upstream error timeout http_500 http_502 http_503 http_504; # Lidar com falhas de servidor de forma adequada
    }
  }
}